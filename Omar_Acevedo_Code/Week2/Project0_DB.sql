
/* Create persons table */

  CREATE TABLE "OMARACEDB"."P0_PERSONS"
   (	"PERSONID" NUMBER NOT NULL, 
	"FIRSTNAME" VARCHAR2(40 BYTE) NOT NULL, 
	"LASTNAME" VARCHAR2(20 BYTE) NOT NULL, 
	"ADDRESS" VARCHAR2(70 BYTE), 
	"CITY" VARCHAR2(40 BYTE), 
	"STATE" VARCHAR2(40 BYTE), 
	"COUNTRY" VARCHAR2(40 BYTE), 
	"POSTALCODE" VARCHAR2(10 BYTE), 
	"PHONE" VARCHAR2(24 BYTE), 
	"USERID" NUMBER, -- Not NOT NULL because a person can exist by itself (jic),
					 -- and can be created for testing purposes; a dummy person.
    
	 CONSTRAINT "P0_PK_PERSONS" PRIMARY KEY ("PERSONID")
	 --CONSTRAINT "FK_CUSTOMERSUPPORTREPID" FOREIGN KEY ("SUPPORTREPID")
	  --REFERENCES "OMARACEDB"."EMPLOYEE" ("EMPLOYEEID") ENABLE
   );

  CREATE SEQUENCE "OMARACEDB"."P0_PERSONS_SEQ";

  CREATE OR REPLACE TRIGGER "OMARACEDB"."P0_BI_PERSONS_TRIG" 
    BEFORE INSERT ON P0_PERSONS
    FOR EACH ROW
    BEGIN
        IF :NEW.PERSONID IS NULL THEN
            SELECT P0_PERSONS_SEQ.NEXTVAL INTO :NEW.PERSONID FROM DUAL;
        END IF;
    END;

/
ALTER TRIGGER "OMARACEDB"."P0_BI_PERSONS_TRIG" ENABLE;



/* Create users table */

  CREATE TABLE "OMARACEDB"."P0_USERS" 
   (	"USERID" NUMBER NOT NULL, 
	"USERNAME" VARCHAR2(40 BYTE) NOT NULL, 
	"PASSWORD" VARCHAR2(20 BYTE) NOT NULL,
	"EMAIL" VARCHAR2(60 BYTE) NOT NULL ENABLE, 
	"PERSONID" NUMBER, -- Not NOT NULL because a user account can be created for testing purposes; a dummy account.
    
	 CONSTRAINT "P0_PK_USERS" PRIMARY KEY ("USERID")
	 --CONSTRAINT "FK_CUSTOMERSUPPORTREPID" FOREIGN KEY ("SUPPORTREPID")
	  --REFERENCES "OMARACEDB"."EMPLOYEE" ("EMPLOYEEID") ENABLE
   );

  CREATE SEQUENCE "OMARACEDB"."P0_USERS_SEQ";

  CREATE OR REPLACE TRIGGER "OMARACEDB"."P0_BI_USERS_TRIG" 
    BEFORE INSERT ON P0_USERS
    FOR EACH ROW
    BEGIN
        IF :NEW.USERID IS NULL THEN
            SELECT P0_USERS_SEQ.NEXTVAL INTO :NEW.USERID FROM DUAL;
        END IF;
    END;

/
ALTER TRIGGER "OMARACEDB"."P0_BI_USERS_TRIG" ENABLE;


/* Create accounts table */

  CREATE TABLE "OMARACEDB"."P0_ACCOUNTS" 
   (	"ACCOUNTID" NUMBER NOT NULL, 
	"ACCOUNT_NUMBER" VARCHAR2(40 BYTE) NOT NULL, 
	"USERID" NUMBER NOT NULL,	-- IS THE ACCOUNT HOLDER ... ?
	-- "TYPE" VARCHAR2(60 BYTE) NOT NULL, -- ACH, ... Check, Savings, ... ? --> moved to a cross join table
	-- "BALANCE" NUMBER(10, 2),	... balance will go to ACCOUNT_ACCOUNTTYPE table... | remember, acc. type has individual bal.
	"STATUS" VARCHAR2(10),	-- OPEN or CLOSED | ACTIVE or INACTIVE ... ?
    
	 CONSTRAINT "P0_PK_ACCOUNTS" PRIMARY KEY ("ACCOUNTID")
	 CONSTRAINT "P0_FK_ACCOUNTUSERID" FOREIGN KEY ("USERID")
	  REFERENCES "OMARACEDB"."P0_USERS" ("USERID") ENABLE
   );

  CREATE SEQUENCE "OMARACEDB"."P0_ACCOUNTS_SEQ";

  CREATE OR REPLACE TRIGGER "OMARACEDB"."P0_BI_ACCOUNTS_TRIG" 
    BEFORE INSERT ON P0_ACCOUNTS
    FOR EACH ROW
    BEGIN
        IF :NEW.ACCOUNTID IS NULL THEN
            SELECT P0_ACCOUNTS_SEQ.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
        END IF;
    END;

/
ALTER TRIGGER "OMARACEDB"."P0_BI_ACCOUNTS_TRIG" ENABLE;


/* Create account types table */

  -- CREATE TABLE "OMARACEDB"."P0_ACCOUNT_TYPES"
  CREATE TABLE "OMARACEDB"."P0_ACCOUNTTYPES" 
   (	"ACCOUNTTYPESID" NUMBER NOT NULL, 
	"NAME" VARCHAR2(40 BYTE) NOT NULL,		-- ACH, ... Check, Savings, ... ?
	-- "BALANCE" NUMBER(10, 2),	... balance will go to ACCOUNT_ACCOUNTTYPE table... | remember, acc. type has individual bal.
	
	 CONSTRAINT "P0_PK_ACCOUNTTYPES" PRIMARY KEY ("ACCOUNTTYPESID")
   );

  CREATE SEQUENCE "OMARACEDB"."P0_ACCOUNTTYPES_SEQ";

  CREATE OR REPLACE TRIGGER "OMARACEDB"."P0_BI_ACCOUNTTYPES_TRIG" 
    BEFORE INSERT ON P0_ACCOUNTTYPES
    FOR EACH ROW
    BEGIN
        IF :NEW.ACCOUNTTYPESID IS NULL THEN
            SELECT P0_ACCOUNTTYPES_SEQ.NEXTVAL INTO :NEW.ACCOUNTTYPESID FROM DUAL;
        END IF;
    END;

/
ALTER TRIGGER "OMARACEDB"."P0_BI_ACCOUNTTYPES_TRIG" ENABLE;


/* Create account accounttype table */	-- CROSS JOIN TABLE
--	Account can have one or type of account types. (Checking and/or Savings)
  CREATE TABLE "OMARACEDB"."P0_ACCOUNT_ACCOUNTTYPE"
   (	"ACCOUNT_ACCOUNTTYPEID" NUMBER NOT NULL, 
	"ACCOUNTID" NUMBER NOT NULL,		-- ACH, ... Check, Savings, ... ?
	"ACCOUNTTYPESID" NUMBER NOT NULL,
	"BALANCE" NUMBER(10, 2),			-- each acc w/acc type has individual balance
	
	 CONSTRAINT "P0_PK_ACCOUNT_ACCOUNTTYPE" PRIMARY KEY ("ACCOUNT_ACCOUNTTYPEID")
	 -- FOREING ... ACCOUNTID... 
   );

  CREATE SEQUENCE "OMARACEDB"."P0_ACCOUNT_ACCOUNTTYPE_SEQ";

  CREATE OR REPLACE TRIGGER "OMARACEDB"."P0_BI_ACCOUNT_ACCOUNTTYPE_TRIG" 
    BEFORE INSERT ON P0_ACCOUNT_ACCOUNTTYPE
    FOR EACH ROW
    BEGIN
        IF :NEW.ACCOUNT_ACCOUNTTYPEID IS NULL THEN
            SELECT P0_ACCOUNT_ACCOUNTTYPE_SEQ.NEXTVAL INTO :NEW.ACCOUNT_ACCOUNTTYPEID FROM DUAL;
        END IF;
    END;

/
ALTER TRIGGER "OMARACEDB"."P0_BI_ACCOUNT_ACCOUNTTYPE_TRIG" ENABLE;



/* Create transactions table */

  CREATE TABLE "OMARACEDB"."P0_TRANSACTIONS" 
   (	"TRANSACTIONID" NUMBER NOT NULL, 
	"DATETIME" DATE NOT NULL, 
	"TYPE" VARCHAR2(20 BYTE) NOT NULL,	-- WITHDRAWAL, DEPOSIT, TRANSER ( CHECKING -> SAVINGS; SAVIGS -> CHECKING )
	"AMOUNT" VARCHAR2(60 BYTE) NOT NULL, -- TRANSACTION AMOUNT; AMOUNT WHEN TRANSACTION WAS DONE 
	"ACCOOUNT TYPE" ??? -- WHAT ACCOUNT TYPE WAS USED FOR TRANSACTION... CHECKING OR SAVINGS?
	"ACCOUNTID" NUMBER ???
	"USERID" NUMBER ???
    
	 CONSTRAINT "P0_PK_ACCOUNTS" PRIMARY KEY ("ACCOUNTID")
	 CONSTRAINT "P0_FK_ACCOUNTUSERID" FOREIGN KEY ("USERID")
	  REFERENCES "OMARACEDB"."P0_USERS" ("USERID") ENABLE
   );

  CREATE SEQUENCE "OMARACEDB"."P0_ACCOUNTS_SEQ";

  CREATE OR REPLACE TRIGGER "OMARACEDB"."P0_BI_ACCOUNTS_TRIG" 
    BEFORE INSERT ON P0_ACCOUNTS
    FOR EACH ROW
    BEGIN
        IF :NEW.ACCOUNTID IS NULL THEN
            SELECT P0_ACCOUNTS_SEQ.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
        END IF;
    END;

/
ALTER TRIGGER "OMARACEDB"."P0_BI_ACCOUNTS_TRIG" ENABLE;



/* Create user accounts table */ -- WHAT?... NO, NOT REALLY... A USER CAN HAVE MANY ACCOUNTS,
--													BUT AN ACCOUNT CANNOT BELONG TO MANY USERS... NO.
--											THEREFORE, USER HAS MANY ACCOUNT
--												NOT THE OTHER WAY AROUND, ... OR CROSS TABLE NOT REALLY NEEDED.

--   CREATE TABLE "OMARACEDB"."P0_USER_ACCOUNT" 
--    (	"USERACCOUNTID" NUMBER NOT NULL, 
-- 	"ACCOUNT_NUMBER" VARCHAR2(40 BYTE) NOT NULL, 
-- 	"USERID" VARCHAR2(20 BYTE) NOT NULL,	-- IS THE ACCOUNT HOLDER
-- 	"..._TYPE" VARCHAR2(60 BYTE) NOT NULL, -- ACH, ... Check, Savings, ... ?
    
-- 	 --CONSTRAINT "" PRIMARY KEY ("ACCOUNTID")
-- 	 --CONSTRAINT "" FOREIGN KEY ("USERID")
-- 	  --REFERENCES "OMARACEDB"."P0_USERS" ("USERID") ENABLE
--    );

--   CREATE SEQUENCE "OMARACEDB"."";

--   CREATE OR REPLACE TRIGGER "OMARACEDB"."" 
--     BEFORE INSERT ON P0_USER_ACCOUNT
--     FOR EACH ROW
--     BEGIN
--         IF :NEW.USERACCOUNTID IS NULL THEN
--             SELECT .NEXTVAL INTO :NEW.USERACCOUNTID FROM DUAL;
--         END IF;
--     END;

-- /
-- ALTER TRIGGER "OMARACEDB"."" ENABLE;



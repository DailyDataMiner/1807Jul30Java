<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	<!-- Set up our annotations. -->
	<context:annotation-config />
	<!-- This tells Spring where to look for our annotations. -->
	<context:component-scan
		base-package="com.iantimothyjohnson.notes.week6" />

	<!-- This is where we configure the Spring container. -->
	<!-- Let's configure our first bean. -->
	<!-- By default, all beans have singleton scope. There is also prototype 
		scope, which allows every new reference to give us a new bean. -->
	<bean id="firstBean"
		class="com.iantimothyjohnson.notes.week6.HelloWorld" scope="prototype">
		<!-- Setter injection -->
		<!-- <property name="message" value="Welcome to Spring! This is dependency 
			injection." /> -->
		<!-- Constructor injection -->
		<constructor-arg name="message"
			value="This is dependency injection from a constructor." />
	</bean>

	<bean id="dependent"
		class="com.iantimothyjohnson.notes.week6.DependentBean">
		<property name="hello" ref="firstBean" />
	</bean>

	<!-- Autowiring with XML: -->
	<!-- <bean id="employee" class="com.iantimothyjohnson.notes.week6.autowire.Employee" 
		autowire="byName"> <constructor-arg name="name" value="Ian" /> <property 
		name="salary" value="55000.0" /> </bean> <bean id="department" class="com.iantimothyjohnson.notes.week6.autowire.Department" 
		scope="prototype"> <constructor-arg name="name" value="Marketing" /> </bean> -->

	<bean id="life"
		class="com.iantimothyjohnson.notes.week6.lifecycle.Life"
		init-method="customInitMethod" destroy-method="customDestroyMethod">
		<property name="circleOfLife" value="Staying alive!" />
	</bean>
</beans>

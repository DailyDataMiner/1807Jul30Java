<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.revature</groupId>
  <artifactId>firstmavenproject1</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Intro to Maven</name>
  <description>First Maven Project
</description>

<!-- POM.xml
The POM, or Project Object Model is the fundamental unit of work in Maven. It is an XML
file that contains information about the project and configuration details used by maven
to build a project.

Build means to take your source code and copile it into the object code or whatever form is used for actuallly running

XML - exstensible Markup Language.  It is a markup language that is typically used to define a set of rules for documents and frameworks. 
It has elements denoted in <tags< and between opening and closing tags and holds the value of the element
-related topiccs: valid vs well formed, DTD, XMLNS, XML parsing

Markup Language - a system for annotating a doc
in a way that is syntatically distinguishible from the text-->

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

	</dependencies>
</project>